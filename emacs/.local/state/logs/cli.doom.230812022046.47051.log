* 0.171793:*:cli:run!: doom install
* 0.171943:*:cli:context-parse: found command (doom)
* 0.172448:*:cli:load: autoload /Users/fanzhiwen/.config/emacs/lisp/cli/install.el
* 0.172513:*:cli:load: ~/.config/emacs/lisp/cli/install.el nil
* 0.174387:*:cli:load: ~/.config/emacs/lisp/cli/packages nil
* 0.222512:*:cli:context-parse: found command (doom install)
* 0.223002:*:cli:context-execute: doom install
* 0.223469:*:cli:execute: (:before) ((input) (context . #s(doom-cli-context (25814 31742 77267 0) 47051 0 (80 . 24) nil nil doom nil nil (doom install) nil (install) ((--hooks) (--fonts) (--install) (--env) (--config) (--eval) (-E) (--strict-load) (--load) (-L) (--color) (--benchmark) (--profile) (--pager) (--emacsdir) (--doomdir) (--verbose) (-v) (--debug) (-D) (--force) (-!)) ((t) ((doom install)) ((doom) install))  *doom-cli stdin*  *doom-cli stdout*  *doom-cli stderr* nil)) (_) (evals) (loads) (color?) (bench?) (profile) (pager) (emacsdir) (doomdir) (verbose?) (debug?) (force?))
* 0.223548:*:cli:execute: (doom install) ((context . #s(doom-cli-context (25814 31742 77267 0) 47051 0 (80 . 24) nil nil doom nil nil (doom install) nil (install) ((--hooks) (--fonts) (--install) (--env) (--config) (--eval) (-E) (--strict-load) (--load) (-L) (--color) (--benchmark) (--profile) (--pager) (--emacsdir) (--doomdir) (--verbose) (-v) (--debug) (-D) (--force) (-!)) ((t) ((doom install)) ((doom) install))  *doom-cli stdin*  *doom-cli stdout*  *doom-cli stderr* nil)) (hooks? . :yes) (fonts? . :yes) (install? . :yes) (envfile? . :yes) (config? . :yes))
Installing Doom Emacs!

- Skipping ~/.config/doom/ (already exists)
  - Skipping init.el (already exists)
  - Skipping config.el (already exists)
  - Skipping packages.el (already exists)
* 0.226984:*:cli:load: ~/.config/doom/init.el t
- Envvar file already exists, skipping
Installing plugins
* 0.229302:*:cli:Initializing straight
* 0.229459::context: +packages (cli t)
* 0.229517::context:module: =[0 -110 -110 :core nil nil nil]
* 0.303872:*:cli:Initializing recipes
* 0.308930:*:cli:Installing core packages
* 0.308999:*:cli:Initializing package.el
* 0.369625:*:cli:Initializing straight.el
* 0.369978::context: +packages (cli t)
* 0.370037::context:module: =[1 105 -105 :user nil nil nil]
* 0.370430::context:module: =[2 -111 -111 :config use-package nil nil]
* 0.372245::context:module: =[0 -110 -110 :core nil nil nil]
* 0.384182::context:module: =[1 105 -105 :user nil nil nil]
* 0.384478::context:module: =[32 0 0 :config default (+bindings +smartparens) nil]
* 0.387328::context:module: =[32 0 0 :lang sh nil nil]
* 0.389299::context:module: =[32 0 0 :lang org nil nil]
* 0.405526::context:module: =[32 0 0 :lang markdown nil nil]
* 0.408689::context:module: =[32 0 0 :lang emacs-lisp nil nil]
* 0.413713::context:module: =[32 0 0 :os macos nil nil]
* 0.415838::context:module: =[32 0 0 :tools magit nil nil]
* 0.418582::context:module: =[32 0 0 :tools lookup nil nil]
* 0.423613::context:module: =[32 0 0 :tools eval (+overlay) nil]
* 0.425329::context:module: =[32 0 0 :checkers syntax nil nil]
* 0.428046::context:module: =[32 0 0 :emacs vc nil nil]
* 0.432338::context:module: =[32 0 0 :emacs undo nil nil]
* 0.435826::context:module: =[32 0 0 :emacs electric nil nil]
* 0.435951::context:module: =[32 0 0 :emacs dired nil nil]
* 0.439575::context:module: =[32 0 0 :editor snippets nil nil]
* 0.442015::context:module: =[32 0 0 :editor fold nil nil]
* 0.444773::context:module: =[32 0 0 :editor file-templates nil nil]
* 0.446269::context:module: =[32 0 0 :editor evil (+everywhere) nil]
* 0.455557::context:module: =[32 0 0 :ui workspaces nil nil]
* 0.456910::context:module: =[32 0 0 :ui vi-tilde-fringe nil nil]
* 0.458447::context:module: =[32 0 0 :ui vc-gutter (+pretty) nil]
* 0.460450::context:module: =[32 0 0 :ui popup (+defaults) nil]
* 0.460567::context:module: =[32 0 0 :ui ophints nil nil]
* 0.462297::context:module: =[32 0 0 :ui modeline nil nil]
* 0.464803::context:module: =[32 0 0 :ui hl-todo nil nil]
* 0.466537::context:module: =[32 0 0 :ui doom-dashboard nil nil]
* 0.466656::context:module: =[32 0 0 :ui doom nil nil]
* 0.468860::context:module: =[32 0 0 :completion vertico nil nil]
* 0.474498::context:module: =[32 0 0 :completion company nil nil]
* 0.476815::context:module: =[1 105 -105 :user nil nil nil]
> Installing packages...
  - No packages need to be installed
Regenerating autoloads files
> (Re)building profile in /Users/fanzhiwen/.config/emacs/.local/etc/@/...
  > Deleting old init files...
  > Generating 4 init files...
  > Byte-compiling ~/.config/emacs/.local/etc/@init.29.el...
  ✓ Built init.29.elc
Deploying commit-msg and pre-push git hooks
  * 1.534845:*:cli:call: (doom install) -> (doom ci deploy-hooks)
  * 1.534989:*:cli:context-parse: found command (doom)
  * 1.535434:*:cli:load: autoload /Users/fanzhiwen/.config/emacs/lisp/cli/ci.el
  * 1.535501:*:cli:load: ~/.config/emacs/lisp/cli/ci.el nil
  * 1.546344:*:cli:context-parse: found command (doom ci)
  * 1.547245:*:cli:context-parse: found command (doom ci deploy-hooks)
  * 1.547797:*:cli:context-execute: doom ci deploy-hooks
  * 1.548374:*:cli:execute: (:before) ((input) (context . #s(doom-cli-context (25814 31742 77267 0) 47051 0 (80 . 24) nil nil doom nil nil (doom ci deploy-hooks) nil (install) ((--hooks) (--fonts) (--install) (--env) (--config) (--eval) (-E) (--strict-load) (--load) (-L) (--color) (--benchmark) (--profile) (--pager) (--emacsdir) (--doomdir) (--verbose) (-v) (--debug) (-D) (--force) (-!)) ((t) ((doom ci deploy-hooks)) ((doom ci) deploy-hooks) ((doom) ci deploy-hooks))  *doom-cli stdin*  *doom-cli stdout*  *doom-cli stderr* nil)) (_) (evals) (loads) (color?) (bench?) (profile) (pager) (emacsdir) (doomdir) (verbose?) (debug?) (force?))
  * 1.548461:*:cli:execute: (doom ci deploy-hooks) ((force))
    ✓ Overwrote ~/.config/emacs/.git/hooks/commit-msg
    ✓ Overwrote ~/.config/emacs/.git/hooks/pre-push
✓  Finished! Doom is ready to go!

But before you doom yourself, here are some things you should know:

1. Don't forget to run 'doom sync', then restart Emacs, after modifying init.el
   or packages.el in ~/.config/doom.

   This command ensures needed packages are installed, orphaned packages are
   removed, and your autoloads/cache files are up to date. When in doubt, run
   'doom sync'!

2. If something goes wrong, run `doom doctor`. It diagnoses common issues with
   your environment and setup, and may offer clues about what is wrong.

3. Use 'doom upgrade' to update Doom. Doing it any other way will require
   additional steps. Run 'doom help upgrade' to understand those extra steps.

4. Access Doom's documentation from within Emacs via 'SPC h d h' or 'C-h d h'
   (or 'M-x doom/help')

Have fun!

* 36.559785:*:cli:Finished (GCs: 1, elapsed: 0.008217s)
* 36.559785:*:cli:Finished (GCs: 1, elapsed: 0.008217s)
✓ Finished in 36.55990s
